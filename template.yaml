AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: jcloudify-app-deployer

Globals:
  Function:
    Timeout: 900
    MemorySize: 1024
    VpcConfig:
      SecurityGroupIds:
        - !Sub '{{resolve:ssm:/jcloudify-api/sg/id}}'
      SubnetIds:
        - !Sub '{{resolve:ssm:/jcloudify-api/private/subnet1/id}}'
        - !Sub '{{resolve:ssm:/jcloudify-api/private/subnet2/id}}'
    Tracing: Active
    Environment:
      Variables:
        AWS_S3_BUCKET_NAME: !Sub '{{resolve:ssm:/jcloudify-api/${Env}/s3/bucket-name}}'
        AWS_EVENTBRIDGE_BUS: !Sub '{{resolve:ssm:/jcloudify-api/${Env}/eventbridge/bus-name}}'
        MOCK_PROJECT_BUCKET_KEY: !Sub '{{resolve:ssm:/jcloudify-app-deployer/${Env}/mock-project/bucket-key}}'
        MOCK_PROJECT_FOLDER_NAME: !Sub '{{resolve:ssm:/jcloudify-app-deployer/${Env}/mock-project/folder-name}}'

Parameters:
  Env:
    Type: String

Resources:
  DeployerFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Role: !Sub '{{resolve:ssm:/jcloudify-api/${Env}/execution/role-arn}}'
      Architectures:
        - x86_64
      Events:
        AllEvents:
          Type: SQS
          Properties:
            Queue: !Sub '{{resolve:ssm:/jcloudify-app-deployer/${Env}/sqs/mailbox-queue-arn}}'
            BatchSize: 5
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./jcloudify
      DockerTag: python3.9-v1

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName: !Ref ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
